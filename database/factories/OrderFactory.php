<?php

namespace Database\Factories;

use App\Models\Order;
use App\Models\Bank;
use App\Models\User;
use App\Models\OrderStatus;
use Illuminate\Database\Eloquent\Factories\Factory;

class OrderFactory extends Factory
{
    protected $model = Order::class;

    public function definition()
    {
        // Получим существующий банк, статус и курьера
        $bank = Bank::inRandomOrder()->first();
        $courier = User::where('role', 'courier')->inRandomOrder()->first();

        // Создаем заказы с разными статусами для тестирования статистики
        $statusId = $this->faker->randomElement([1, 2, 3, 4, 5, 6]); // Все возможные статусы
        $status = OrderStatus::find($statusId) ?: OrderStatus::first();

        // Русские имена и фамилии
        $russianNames = [
            'Александр',
            'Алексей',
            'Андрей',
            'Антон',
            'Артём',
            'Борис',
            'Вадим',
            'Валентин',
            'Валерий',
            'Василий',
            'Виктор',
            'Виталий',
            'Владимир',
            'Владислав',
            'Вячеслав',
            'Геннадий',
            'Георгий',
            'Григорий',
            'Денис',
            'Дмитрий',
            'Евгений',
            'Егор',
            'Иван',
            'Игорь',
            'Илья',
            'Кирилл',
            'Константин',
            'Леонид',
            'Максим',
            'Михаил',
            'Николай',
            'Олег',
            'Павел',
            'Пётр',
            'Роман',
            'Сергей',
            'Станислав',
            'Степан',
            'Фёдор',
            'Юрий',
            'Анна',
            'Валентина',
            'Вера',
            'Галина',
            'Дарья',
            'Екатерина',
            'Елена',
            'Жанна',
            'Зоя',
            'Ирина',
            'Кристина',
            'Лариса',
            'Любовь',
            'Мария',
            'Надежда',
            'Наталья',
            'Ольга',
            'Полина',
            'Раиса',
            'Светлана',
            'Татьяна',
            'Ульяна',
            'Юлия',
            'Яна'
        ];

        $russianSurnames = [
            'Иванов',
            'Петров',
            'Сидоров',
            'Смирнов',
            'Кузнецов',
            'Попов',
            'Васильев',
            'Соколов',
            'Михайлов',
            'Новиков',
            'Фёдоров',
            'Морозов',
            'Волков',
            'Алексеев',
            'Лебедев',
            'Семёнов',
            'Егоров',
            'Павлов',
            'Козлов',
            'Степанов',
            'Николаев',
            'Орлов',
            'Андреев',
            'Макаров',
            'Никитин',
            'Захаров',
            'Зайцев',
            'Соловьёв',
            'Борисов',
            'Яковлев',
            'Григорьев',
            'Романов',
            'Воробьёв',
            'Сергеев',
            'Королёв',
            'Соколов',
            'Морозов',
            'Петров',
            'Волков',
            'Смирнов'
        ];

        $russianPatronymics = [
            'Александрович',
            'Алексеевич',
            'Андреевич',
            'Антонович',
            'Артёмович',
            'Борисович',
            'Вадимович',
            'Валентинович',
            'Валерьевич',
            'Васильевич',
            'Викторович',
            'Витальевич',
            'Владимирович',
            'Владиславович',
            'Вячеславович',
            'Геннадьевич',
            'Георгиевич',
            'Григорьевич',
            'Денисович',
            'Дмитриевич',
            'Евгеньевич',
            'Егорович',
            'Иванович',
            'Игоревич',
            'Ильич',
            'Кириллович',
            'Константинович',
            'Леонидович',
            'Максимович',
            'Михайлович',
            'Николаевич',
            'Олегович',
            'Павлович',
            'Петрович',
            'Романович',
            'Сергеевич',
            'Станиславович',
            'Степанович',
            'Фёдорович',
            'Юрьевич',
            'Александровна',
            'Алексеевна',
            'Андреевна',
            'Антоновна',
            'Артёмовна',
            'Борисовна',
            'Вадимовна',
            'Валентиновна',
            'Валерьевна',
            'Васильевна',
            'Викторовна',
            'Витальевна',
            'Владимировна',
            'Владиславовна',
            'Вячеславовна',
            'Геннадьевна',
            'Георгиевна',
            'Григорьевна',
            'Денисовна',
            'Дмитриевна',
            'Евгеньевна',
            'Егоровна',
            'Ивановна',
            'Игоревна',
            'Ильинична',
            'Кирилловна',
            'Константиновна',
            'Леонидовна',
            'Максимовна',
            'Михайловна',
            'Николаевна',
            'Олеговна',
            'Павловна',
            'Петровна',
            'Романовна',
            'Сергеевна',
            'Станиславовна',
            'Степановна',
            'Фёдоровна',
            'Юрьевна'
        ];

        return [
            'bank_id'         => $bank ? $bank->id : null,
            'product'         => $this->faker->randomElement(['Карта', 'Вклад', 'Кредит', 'Страхование']),
            'name'            => $this->faker->randomElement($russianNames),
            'surname'         => $this->faker->randomElement($russianSurnames),
            'patronymic'      => $this->faker->randomElement($russianPatronymics),
            'phone'           => $this->faker->phoneNumber(),
            'address'         => $this->faker->address(),
            'delivery_at'     => $this->faker->dateTimeBetween('now', '+30 days'),
            'delivered_at'   => $statusId == 4 ? $this->faker->dateTimeBetween('-30 days', 'now') : null, // Заполняем только для завершенных
            'courier_id'      => $courier ? $courier->id : null,
            'order_status_id' => $status ? $status->id : 1,
            'note'            => $this->faker->optional()->sentence(),
            'declined_reason' => $statusId == 6 ? $this->faker->sentence() : null, // Причина отмены только для отмененных
        ];
    }
}
